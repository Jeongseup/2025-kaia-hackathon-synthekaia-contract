// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "../interfaces/IPerpDex.sol";
import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

/**
 * @title MockPerpDex
 * @dev A mock contract that simulates the behavior of the PerpDex for testing.
 */
contract MockPerpDex is IPerpDex {
    IERC20 public usdt;
    uint256 public lastPositionId = 0;
    
    // Stores the details of the last opened position for verification in tests.
    OpenPositionData public lastOpenPositionData;

    constructor(address _usdtAddress) {
        usdt = IERC20(_usdtAddress);
    }

    /**
     * @notice Simulates opening a position. It captures the input data and
     * transfers the margin amount from the caller to itself.
     */
    function openPosition(OpenPositionData calldata o) external payable override {
        lastOpenPositionData = o;
        lastPositionId++;
        
        // Simulate pulling the margin from the caller.
        if (o.marginAmount > 0) {
            usdt.transferFrom(msg.sender, address(this), o.marginAmount);
        }
    }
}

