// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

/**
 * @title IKlaySwap
 * @dev Simplified interface for a DEX like KlaySwap to swap KAIA for a token (e.g., USDT).
 */
interface IKlaySwap {
    /**
     * @notice Swaps an exact amount of KAIA for as many output tokens as possible.
     * @param amountOutMin The minimum amount of output tokens that must be received for the transaction not to revert.
     * @param path The trading path, an array of token addresses. path[0] is input, path[path.length - 1] is output.
     * @param to The address that will receive the output tokens.
     * @param deadline The timestamp after which the transaction will revert.
     * @return amounts An array of token amounts; amounts[0] is the input amount, amounts[amounts.length - 1] is the output amount.
     */
    function swapExactKLAYForTokens(
        uint amountOutMin,
        address[] calldata path,
        address to,
        uint deadline
    ) external payable returns (uint[] memory amounts);
}

